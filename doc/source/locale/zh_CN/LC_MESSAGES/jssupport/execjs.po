# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, aioqzone
# This file is distributed under the same license as the aioqzone package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: aioqzone \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-10-13 10:45+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"

#: ../../source/jssupport/execjs.rst:2
msgid "Execute JavaScripts"
msgstr "运行 JavaScripts"

#: jssupport.execjs:1 of
msgid "Offers a class to execute js by communicating with subprocess."
msgstr "提供了一个通过调用子进程来执行 JavaScript 的类"

#: jssupport.execjs:5 of
msgid ""
"On win32 platform, importing this module will change asyncio event loop "
"policy to "
":external+python:class:`asyncio.WindowsProactorEventLoopPolicy`!"
msgstr "在 win32 平台上，导入此模块会导致 asyncio 的事件循环策略被更改为 :external+python:class:`asyncio.WindowsProactorEventLoopPolicy`！"

#: jssupport.execjs.ExecJS:1 of
msgid "Execute javascript in such order:"
msgstr "以下列顺序执行 JavaScript："

#: jssupport.execjs.ExecJS:3 of
msgid "setup: :obj:`.setup`, :meth:`.add_setup`"
msgstr ""

#: jssupport.execjs.ExecJS:4 of
msgid "run: :obj:`.run`, :meth:`.add_run`"
msgstr ""

#: jssupport.execjs.ExecJS:5 of
msgid "post: :obj:`.post`, :meth:`.add_post`"
msgstr ""

#: jssupport.execjs.ExecJS:7 of
msgid ""
"If it is required to change executable name, use classvar :obj:`.node`. "
"Note that this must be a executable name, so something like ``bash -c`` "
"is illegal."
msgstr ""

#: jssupport.execjs.ExecJS.add_post:1 of
msgid "Add a post function to :obj:`.post`."
msgstr ""

#: jssupport.execjs.ExecJS.add_run:1 of
msgid "Add a function to :obj:`.run`."
msgstr ""

#: jssupport.execjs.ExecJS.add_setup:1 of
msgid "Add a setup function to :obj:`.setup`."
msgstr ""

#: jssupport.execjs.ExecJS.bind:1 of
msgid ""
"Return an partial of `.exec`, with `node` set to :obj:`.node`, and `js` "
"set to current javascripts in queue: (setup + run + post)."
msgstr ""

#: jssupport.execjs.ExecJS.bind jssupport.execjs.ExecJS.get of
msgid "参数"
msgstr ""

#: jssupport.execjs.ExecJS.bind:5 of
msgid "Optional. If given, the expression will be added to :obj:`.run`."
msgstr "_可选的_。如果给定，表达式会被加入 :obj:`.run`。"

#: jssupport.execjs.ExecJS.check_all:1 of
msgid "Run all checks to see if the environment is ready to run."
msgstr "运行所有检查，判断当前环境是否可以运行 js。"

#: jssupport.execjs.ExecJS.exec:1 of
msgid "Execute `js` using given `node` executable."
msgstr "使用给定的 `node` 可执行程序运行 js。"

#: jssupport.execjs.ExecJS.exec of
msgid "返回类型"
msgstr ""

#: jssupport.execjs.ExecJS.exec:4 of
msgid ":py:class:`str`"
msgstr ""

#: jssupport.execjs.ExecJS.get:1 of
msgid "Get a property from this environment. :obj:`.run` will be cleared."
msgstr ""

#: jssupport.execjs.ExecJS.get:4 of
msgid "The property to get."
msgstr ""

#: jssupport.execjs.ExecJS.loop_policy_check:1 of
msgid ""
"On Windows, the default event loop "
":external+python:class:`asyncio.ProactorEventLoop` supports subprocesses,"
" whereas :external+python:class:`asyncio.SelectorEventLoop` does not."
msgstr ""

#: ../../../docstring jssupport.execjs.ExecJS.node:1 of
msgid "node executable name. Default as :program:`node`."
msgstr ""

#: ../../../docstring jssupport.execjs.ExecJS.post:1 of
msgid ""
"Expressions executed after :obj:`.run`. Will not be cleared after "
"executing."
msgstr ""

#: ../../../docstring jssupport.execjs.ExecJS.run:1 of
msgid ""
"Expressions to be executed, after :obj:`.setup` but before :obj:`.post`. "
"Will be cleared after executing."
msgstr ""

#: ../../../docstring jssupport.execjs.ExecJS.setup:1 of
msgid ""
"Expressions executed before :obj:`.run`. Will not be cleared after "
"executing."
msgstr ""

#: jssupport.execjs.Partial:1 of
msgid ""
"A partial like :external+python:obj:`functools.partial`. It represents a "
"expression in javascript, which includes a predicate (`func`) and its "
"arguments."
msgstr ""

#~ msgid "Parameters"
#~ msgstr ""

#~ msgid "Return type"
#~ msgstr ""
